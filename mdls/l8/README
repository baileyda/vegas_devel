l8 - can be configured to output 1 band or 8 subbands.  
### DESIGNS ###

l8_ver132.mdl - This mdoel removes a 'posedge' block right after the arm 
sofware register and adds a snapshot block after the reshaper, and one
for a single pol (real/imag) form subband 1.

l8_ver131.mdl - 
This model has an arm sequence update and adding an 'and' gate before tx_valid 
on the Ten GbE out.  The arm signal now is confirmed high for only one clock 
and then given a 100 clock delay before entering triggering the sync generator.
'and' gate before tx_valid on the Ten GbE out.

l8_ver106.mdl - This is the current up to date model.  This version
has been tested in Berkeley and appears to work in that environment as
of Aug 25th 2013.  Versions of bof files that are older than this date
can be assumed to not work properly.

The most up to date bof file should be in the top level bofs/ directory.
The most up to date scripts should be in the scripts/l8_lbw8/ or 
scripts/l8_lbw1 directories depending on the mode you are using.

Please note that there may be l8_verXXX versions that are greater than the
most up to date version.  This was due to un-coordination versioning. 

*  SSG status bit order is 3. BLANK 2. SR1 1. SR0 0. CAL

### COMPILING ###

l8_verXXX.mdl uses the "Black Boxing" trick to improve the development efficiency. The technique is described in the Casper Memo No.28(http://casper.berkeley.edu/wiki/images/a/a4/Black_box_memo.pdf).

Since some of the steps (Extract entity, place pcores in the design, etc) have been done already, so to compile l8_ver100.mdl, there's no need to run through every steps described in the memo.

To compile l8_verXXX.mdl:
0) Enter the directory vegas_devel/newmdls/l8
1) Open cichbcic_core.mdl
2) Double click on the System Generator block, click the "Generate" button. Wait for the generation to complete.
5) Open l8_ver100.mdl
6) Compile it as with other regular mdl files.
